{"ast":null,"code":"var _jsxFileName = \"/Users/arthurpolly/Desktop/clickygame/src/App.js\";\nimport React, { Component } from 'react';\nimport Card from \"./components/Card/Index\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\nimport cards from \"./cards.json\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards,\n      score: 0,\n      highscore: 0\n    };\n\n    this.gameOver = () => {\n      if (this.state.score > this.state.highscore) {\n        this.setState({\n          highsore: this.state.score\n        }, function () {\n          console.log(this.state.highscore);\n        });\n      }\n\n      this.state.cards.forEach(card => {\n        card.count = 0;\n      });\n      alert(\"Game Over :(\\nscore: \".concat(this.state.score, \")\"));\n      this.setState({\n        score: 0\n      });\n      return true;\n    };\n\n    this.clickCount = id => {\n      this.state.cards.find((o, i) => {\n        if (o.id === id) {\n          if (cards[i].count === 0) {\n            cards[i].count = cards[i].count + 1;\n            this.setState({\n              score: this.state.score + 1\n            }, function () {\n              console.log(this.state.score);\n            });\n            this.state.cards.sort(() => Math.random() - 0.5);\n            return true;\n          } else {\n            this.gameOver();\n          }\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Header, {\n      score: this.state.score,\n      highscore: this.state.highscore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), this.state.cards.map(card => React.createElement(Card, {\n      clickCount: this.clickCount,\n      id: card.id,\n      key: card.id,\n      image: card.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), \";\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/arthurpolly/Desktop/clickygame/src/App.js"],"names":["React","Component","Card","Header","Wrapper","cards","App","state","score","highscore","gameOver","setState","highsore","console","log","forEach","card","count","alert","clickCount","id","find","o","i","sort","Math","random","render","map","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNF,MAAAA,KADM;AAENG,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,SAAS,EAAE;AAHL,KAFkB;;AAAA,SAQ1BC,QAR0B,GAQf,MAAM;AACf,UAAG,KAAKH,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWE,SAAjC,EAA2C;AACzC,aAAKE,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC;AAAtB,SAAd,EAA4C,YAAU;AACpDK,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWE,SAAvB;AACD,SAFD;AAGD;;AACD,WAAKF,KAAL,CAAWF,KAAX,CAAiBU,OAAjB,CAAyBC,IAAI,IAAI;AAC/BA,QAAAA,IAAI,CAACC,KAAL,GAAW,CAAX;AACD,OAFD;AAGAC,MAAAA,KAAK,gCAAyB,KAAKX,KAAL,CAAWC,KAApC,OAAL;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAE;AAAR,OAAd;AACA,aAAO,IAAP;AACD,KApByB;;AAAA,SAsB1BW,UAtB0B,GAsBbC,EAAE,IAAI;AACjB,WAAKb,KAAL,CAAWF,KAAX,CAAiBgB,IAAjB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC9B,YAAGD,CAAC,CAACF,EAAF,KAASA,EAAZ,EAAgB;AACd,cAAGf,KAAK,CAACkB,CAAD,CAAL,CAASN,KAAT,KAAkB,CAArB,EAAuB;AACrBZ,YAAAA,KAAK,CAACkB,CAAD,CAAL,CAASN,KAAT,GAAiBZ,KAAK,CAACkB,CAAD,CAAL,CAASN,KAAT,GAAgB,CAAjC;AACA,iBAAKN,QAAL,CAAc;AAACH,cAAAA,KAAK,EAAG,KAAKD,KAAL,CAAWC,KAAX,GAAkB;AAA3B,aAAd,EACE,YAAU;AACRK,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,KAAvB;AACD,aAHH;AAIE,iBAAKD,KAAL,CAAWF,KAAX,CAAiBmB,IAAjB,CAAsB,MAAMC,IAAI,CAACC,MAAL,KAAe,GAA3C;AACA,mBAAO,IAAP;AACD,WARH,MAQQ;AACJ,iBAAKhB,QAAL;AACD;AACJ;AACF,OAdD;AAeD,KAtCyB;AAAA;;AAuC1BiB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWC,KAA1B;AAAiC,MAAA,SAAS,EACzC,KAAKD,KAAL,CAAWE,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGG,KAAKF,KAAL,CAAWF,KAAX,CAAiBuB,GAAjB,CAAqBZ,IAAI,IAC1B,oBAAC,IAAD;AACE,MAAA,UAAU,EAAE,KAAKG,UADnB;AAEE,MAAA,EAAE,EAAEH,IAAI,CAACI,EAFX;AAGE,MAAA,GAAG,EAAEJ,IAAI,CAACI,EAHZ;AAIE,MAAA,KAAK,EAAEJ,IAAI,CAACa,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,CAHH,MADF;AAcD;;AAtDyB;;AAwD5B,eAAevB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Card from \"./components/Card/Index\"\nimport Header from \"./components/Header\"\nimport Wrapper from \"./components/Wrapper\"\nimport cards from \"./cards.json\";\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    cards,\n    score: 0,\n    highscore: 0\n  };\n\n  gameOver = () => {\n    if(this.state.score > this.state.highscore){\n      this.setState({highsore: this.state.score}, function(){\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.cards.forEach(card => {\n      card.count=0;\n    });\n    alert(`Game Over :(\\nscore: ${this.state.score})`);\n    this.setState({score: 0});\n    return true;\n  }\n  \n  clickCount = id => {\n    this.state.cards.find((o, i) => {\n      if(o.id === id) {\n        if(cards[i].count ===0){\n          cards[i].count = cards[i].count +1;\n          this.setState({score : this.state.score +1},\n            function(){\n              console.log(this.state.score);\n            });\n            this.state.cards.sort(() => Math.random() -0.5)\n            return true;\n          }else {\n            this.gameOver();\n          }\n      }\n    });\n  }\n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore=\n        {this.state.highscore}></Header>\n        {this.state.cards.map(card =>\n        <Card \n          clickCount={this.clickCount}\n          id={card.id}\n          key={card.id}\n          image={card.image}\n          />\n        )};\n      </Wrapper>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}